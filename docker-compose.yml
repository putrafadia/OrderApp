version: '3.4'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "./zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
  kafka:
    image: docker.io/bitnami/kafka
    ports:
      - "9092:9092"
    links:
      - "zookeeper"
    volumes:
      - "./kafka_data:/bitnami"
    environment:      
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-tier

  userql:
    image: ${DOCKER_REGISTRY-}userql
    build:
      context: .
      dockerfile: UserQL/Dockerfile

  productql:
    image: ${DOCKER_REGISTRY-}productql
    build:
      context: .
      dockerfile: ProductQL/Dockerfile


  orderql:
    image: ${DOCKER_REGISTRY-}orderql
    build:
      context: .
      dockerfile: OrderQL/Dockerfile


  orderprocessor:
    image: ${DOCKER_REGISTRY-}orderprocessor
    build:
      context: .
      dockerfile: OrderProcessor/Dockerfile

networks:
  app-tier:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local